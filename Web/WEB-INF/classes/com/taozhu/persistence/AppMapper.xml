<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.taozhu.persistence.AppMapper" >

	
	<sql id="Base_Column_List">
	    app_name,
	    app_version,
	    app_url,
	    remark
	</sql>
    
    
    <!--根据版本号查询应用信息-->
	<select id="queryAppByVersion" resultType="java.util.HashMap">
		SELECT 
		<include refid="Base_Column_List" />
		 FROM lv_app  where app_version=(SELECT MAX(app_version) FROM lv_app)
		 order by id
	</select>
	
	
	
	
	<!--  *****************************************************************
	  *****后台管理web 脚本映射
	  *****************************************************************-->
	<!-- 后台 公共部分-->
	<sql id="selectFragment">
		<![CDATA[
		select 
		id,
	    app_name,
	    app_version,
	    app_url,
	    remark
		from  lv_app 
		]]>
	 </sql>

	<sql id="conditionFragment">
		<where>
			<if test="app_name != null and app_name!=''">and  app_name = #{ app_name,jdbcType=VARCHAR} </if>
			<if test="app_version!=null and app_version!=''">and app_version=#{app_version,jdbcType=VARCHAR}</if>
		</where>
	</sql>
	
	<sql id="orderByFragment">
		<choose>
			<when test="orderBy!=null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by id
			</otherwise>
		</choose>
	</sql>
	
	<select id="commonQuery" resultType="java.util.Map"  parameterType="java.util.Map" >
		<include refid="selectFragment" /> 
		<include refid="conditionFragment" /> 
		<include refid="orderByFragment"/>
	</select>
		
	<!-- 根据用户id查询用户详情 -->
	 <select id="getAppById" resultType="java.util.Map"  parameterType="java.util.Map" >
		<include refid="selectFragment" /> 
		where id=#{id,jdbcType=INTEGER} 
		<include refid="orderByFragment"/>
	</select>
	
	
	<!-- 插入应用信息 -->
	<insert id="saveWebApp" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		INSERT INTO lv_app (
			  id,
			  app_name,
		      app_version,
		      app_url,
		      remark
		) VALUES (
			#{id},
			#{app_name,jdbcType=VARCHAR},
			#{app_version,jdbcType=VARCHAR},
			#{app_url,jdbcType=VARCHAR},
			#{remark,jdbcType=VARCHAR}
		)
	</insert>

    <!--修改应用信息   -->
	<update id="updateWebApp" parameterType="map">
		UPDATE lv_app SET
						app_name =#{app_name},
						app_version =#{app_version},
						app_url =#{app_url},
						remark =#{remark}
		WHERE
		               id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 删除应用信息 -->
	<delete id="deleteApp" parameterType="java.util.HashMap">
		delete from lv_app
		<where>
			<choose>
				<when test="ids!=null and  ids!=''">
					and id in (#{ids})
				</when>
				<otherwise>
					and 1=2
				</otherwise>
			</choose>
		</where>
	</delete>
</mapper>